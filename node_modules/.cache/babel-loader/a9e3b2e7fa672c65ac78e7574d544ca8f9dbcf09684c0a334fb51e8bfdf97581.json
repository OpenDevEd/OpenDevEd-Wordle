{"ast":null,"code":"var _jsxFileName = \"/home/lsemlali/OpenDevEd-Wordle/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport words from \"./words.json\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORD_SIZE = 5;\nlet currentIndex = 0;\nconst randomIndex = Math.floor(Math.random() * words.length);\nconst wordToGuess = words[randomIndex].toUpperCase();\nconsole.log(wordToGuess);\nfunction App() {\n  _s();\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [currentGuess, setCurrentGuess] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent form submission from reloading the page\n    const guess = inputs.join('');\n    console.log('User Guess:', guess);\n    // Handle the guess submission logic here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Wordle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), guesses.map(guess => {\n      return /*#__PURE__*/_jsxDEV(Line, {\n        guess: guess !== null && guess !== void 0 ? guess : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"input\",\n      children: \"Guess:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      value: currentGuess,\n      onChange: e => {\n        const guess = e.target.value;\n        if (guess.length < 6 && guess.match(/^[a-zA-Z]*$/)) setCurrentGuess(e.target.value);\n      },\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          if (currentGuess.length === 5) {\n            let newGuesses = [...guesses];\n            newGuesses[currentIndex] = currentGuess.toUpperCase();\n            setCurrentGuess('');\n            setGuesses(newGuesses);\n            currentIndex++;\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '5px'\n        },\n        children: inputs.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `input-${index}`,\n          type: \"text\",\n          maxLength: \"1\",\n          value: value,\n          onChange: e => handleChange(e, index),\n          onKeyDown: e => handleKeyDown(e, index),\n          style: {\n            width: '40px',\n            height: '40px',\n            textAlign: 'center',\n            fontSize: '24px',\n            textTransform: 'uppercase'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginTop: '10px',\n          padding: '10px 20px',\n          fontSize: '16px'\n        },\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y+g00fZaZ6ziMSPm1SIwp+BBF7Q=\");\n_c = App;\nfunction Line({\n  guess\n}) {\n  let char = '';\n  let boxes = [];\n  let className = 'tile';\n  for (let i = 0; i < WORD_SIZE; i++) {\n    console.log(guess, '---', wordToGuess);\n    if (guess && wordToGuess[i] === guess[i]) className += ' correct';else if (guess && wordToGuess.includes(guess[i])) className += ' close';else if (guess) className += ' incorrect';\n    char = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: guess[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n    className = 'tile';\n    boxes.push(char);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line\",\n    children: boxes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Line;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Line\");","map":{"version":3,"names":["useState","words","jsxDEV","_jsxDEV","WORD_SIZE","currentIndex","randomIndex","Math","floor","random","length","wordToGuess","toUpperCase","console","log","App","_s","guesses","setGuesses","Array","fill","currentGuess","setCurrentGuess","handleSubmit","e","preventDefault","guess","inputs","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Line","for","type","value","onChange","target","match","onKeyDown","key","newGuesses","onSubmit","style","display","gap","index","id","maxLength","handleChange","handleKeyDown","width","height","textAlign","fontSize","textTransform","marginTop","padding","_c","char","boxes","i","includes","push","_c2","$RefreshReg$"],"sources":["/home/lsemlali/OpenDevEd-Wordle/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport words from \"./words.json\"\nimport './App.css';\n\nconst WORD_SIZE = 5;\nlet currentIndex = 0;\nconst randomIndex = Math.floor(Math.random() * words.length);\nconst wordToGuess = words[randomIndex].toUpperCase();\nconsole.log(wordToGuess)\nfunction App() {\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [currentGuess, setCurrentGuess] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent form submission from reloading the page\n    const guess = inputs.join('');\n    console.log('User Guess:', guess);\n    // Handle the guess submission logic here\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className='title'>Wordle</h1>\n      {\n        guesses.map(guess => {\n          return <Line guess={guess ?? ''}/>\n        })\n      }\n      <label for=\"input\">Guess:</label>\n      <input \n        className='input'\n        type='text'value={currentGuess} \n        onChange={(e) => {\n          const guess = e.target.value;\n          if (guess.length < 6 && guess.match(/^[a-zA-Z]*$/))\n            setCurrentGuess(e.target.value);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            if (currentGuess.length === 5) {\n              let newGuesses = [...guesses];\n              newGuesses[currentIndex] = currentGuess.toUpperCase();\n              setCurrentGuess('');\n              setGuesses(newGuesses)\n              currentIndex++;\n            }\n          }\n        }}></input>\n            <form onSubmit={handleSubmit}>\n      <div style={{ display: 'flex', gap: '5px' }}>\n        {inputs.map((value, index) => (\n          <input\n            key={index}\n            id={`input-${index}`}\n            type=\"text\"\n            maxLength=\"1\"\n            value={value}\n            onChange={(e) => handleChange(e, index)}\n            onKeyDown={(e) => handleKeyDown(e, index)}\n            style={{\n              width: '40px',\n              height: '40px',\n              textAlign: 'center',\n              fontSize: '24px',\n              textTransform: 'uppercase',\n            }}\n          />\n        ))}\n      </div>\n      <button type=\"submit\" style={{ marginTop: '10px', padding: '10px 20px', fontSize: '16px' }}>\n        Submit Guess\n      </button>\n    </form>\n    </div>\n  );\n}\n\nfunction Line({ guess }) {\n  let char = ''\n  let boxes = []\n  let className = 'tile';\n  for (let i = 0; i < WORD_SIZE; i++) {\n    console.log(guess, '---', wordToGuess)\n    if (guess && wordToGuess[i] === guess[i])\n      className += ' correct';\n    else if (guess && wordToGuess.includes(guess[i]))\n      className += ' close';\n    else if (guess)\n      className += ' incorrect';\n    char = <div className={className}>{guess[i]}</div>;\n    className = 'tile';\n    boxes.push(char);\n  }\n\n  return <div className='line'>{boxes}</div>\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}