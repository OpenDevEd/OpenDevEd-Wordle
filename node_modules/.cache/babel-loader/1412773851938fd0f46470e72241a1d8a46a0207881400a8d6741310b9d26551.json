{"ast":null,"code":"var _jsxFileName = \"/home/lsemlali/OpenDevEd-Wordle/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport words from \"./words.json\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORD_SIZE = 5;\nlet currentIndex = 0;\nconst randomIndex = Math.floor(Math.random() * words.length);\nconst wordToGuess = words[randomIndex].toUpperCase();\nconsole.log(wordToGuess);\nfunction App() {\n  _s();\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [currentGuess, setCurrentGuess] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Wordle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), guesses.map(guess => {\n      return /*#__PURE__*/_jsxDEV(Line, {\n        guess: guess !== null && guess !== void 0 ? guess : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"input\",\n      children: \"Guess:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      value: currentGuess,\n      onChange: e => {\n        const guess = e.target.value;\n        if (guess.length < 6 && guess.match(/^[a-zA-Z]*$/)) setCurrentGuess(e.target.value);\n      },\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          if (currentGuess.length === 5) {\n            let newGuesses = [...guesses];\n            newGuesses[currentIndex] = currentGuess.toUpperCase();\n            setCurrentGuess('');\n            setGuesses(newGuesses);\n            currentIndex++;\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '5px'\n        },\n        children: inputs.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `input-${index}`,\n          type: \"text\",\n          maxLength: \"1\",\n          value: value,\n          onChange: e => handleChange(e, index),\n          onKeyDown: e => handleKeyDown(e, index),\n          style: {\n            width: '40px',\n            height: '40px',\n            textAlign: 'center',\n            fontSize: '24px',\n            textTransform: 'uppercase'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginTop: '10px',\n          padding: '10px 20px',\n          fontSize: '16px'\n        },\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y+g00fZaZ6ziMSPm1SIwp+BBF7Q=\");\n_c = App;\nfunction Line({\n  guess\n}) {\n  let char = '';\n  let boxes = [];\n  let className = 'tile';\n  for (let i = 0; i < WORD_SIZE; i++) {\n    console.log(guess, '---', wordToGuess);\n    if (guess && wordToGuess[i] === guess[i]) className += ' correct';else if (guess && wordToGuess.includes(guess[i])) className += ' close';else if (guess) className += ' incorrect';\n    char = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: guess[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n    className = 'tile';\n    boxes.push(char);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line\",\n    children: boxes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Line;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Line\");","map":{"version":3,"names":["useState","words","jsxDEV","_jsxDEV","WORD_SIZE","currentIndex","randomIndex","Math","floor","random","length","wordToGuess","toUpperCase","console","log","App","_s","guesses","setGuesses","Array","fill","currentGuess","setCurrentGuess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","guess","Line","for","type","value","onChange","e","target","match","onKeyDown","key","newGuesses","onSubmit","handleSubmit","style","display","gap","inputs","index","id","maxLength","handleChange","handleKeyDown","width","height","textAlign","fontSize","textTransform","marginTop","padding","_c","char","boxes","i","includes","push","_c2","$RefreshReg$"],"sources":["/home/lsemlali/OpenDevEd-Wordle/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport words from \"./words.json\"\nimport './App.css';\n\nconst WORD_SIZE = 5;\nlet currentIndex = 0;\nconst randomIndex = Math.floor(Math.random() * words.length);\nconst wordToGuess = words[randomIndex].toUpperCase();\nconsole.log(wordToGuess)\nfunction App() {\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [currentGuess, setCurrentGuess] = useState('')\n\n\n  \n  return (\n    <div className=\"App\">\n      <h1 className='title'>Wordle</h1>\n      {\n        guesses.map(guess => {\n          return <Line guess={guess ?? ''}/>\n        })\n      }\n      <label for=\"input\">Guess:</label>\n      <input \n        className='input'\n        type='text'value={currentGuess} \n        onChange={(e) => {\n          const guess = e.target.value;\n          if (guess.length < 6 && guess.match(/^[a-zA-Z]*$/))\n            setCurrentGuess(e.target.value);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            if (currentGuess.length === 5) {\n              let newGuesses = [...guesses];\n              newGuesses[currentIndex] = currentGuess.toUpperCase();\n              setCurrentGuess('');\n              setGuesses(newGuesses)\n              currentIndex++;\n            }\n          }\n        }}></input>\n            <form onSubmit={handleSubmit}>\n      <div style={{ display: 'flex', gap: '5px' }}>\n        {inputs.map((value, index) => (\n          <input\n            key={index}\n            id={`input-${index}`}\n            type=\"text\"\n            maxLength=\"1\"\n            value={value}\n            onChange={(e) => handleChange(e, index)}\n            onKeyDown={(e) => handleKeyDown(e, index)}\n            style={{\n              width: '40px',\n              height: '40px',\n              textAlign: 'center',\n              fontSize: '24px',\n              textTransform: 'uppercase',\n            }}\n          />\n        ))}\n      </div>\n      <button type=\"submit\" style={{ marginTop: '10px', padding: '10px 20px', fontSize: '16px' }}>\n        Submit Guess\n      </button>\n    </form>\n    </div>\n  );\n}\n\nfunction Line({ guess }) {\n  let char = ''\n  let boxes = []\n  let className = 'tile';\n  for (let i = 0; i < WORD_SIZE; i++) {\n    console.log(guess, '---', wordToGuess)\n    if (guess && wordToGuess[i] === guess[i])\n      className += ' correct';\n    else if (guess && wordToGuess.includes(guess[i]))\n      className += ' close';\n    else if (guess)\n      className += ' incorrect';\n    char = <div className={className}>{guess[i]}</div>;\n    className = 'tile';\n    boxes.push(char);\n  }\n\n  return <div className='line'>{boxes}</div>\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}