{"ast":null,"code":"var _jsxFileName = \"/home/lsemlali/OpenDevEd-Wordle/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport words from \"./words.json\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORD_SIZE = 5;\nlet currentIndex = 0;\nconst randomIndex = Math.floor(Math.random() * words.length);\nlet wordToGuess = words[randomIndex].toUpperCase();\nconsole.log(wordToGuess);\nfunction App() {\n  _s();\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [isGuessed, setIsGuessed] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const resetGame = () => {\n    currentIndex = 0;\n    setIsGameOver(false);\n    setIsGuessed(false);\n    set('');\n    wordToGuess = words[randomIndex].toUpperCase();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Wordle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), guesses.map(guess => {\n      return /*#__PURE__*/_jsxDEV(Line, {\n        guess: guess !== null && guess !== void 0 ? guess : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        if (currentGuess.length === 5) {\n          let newGuesses = [...guesses];\n          newGuesses[currentIndex] = currentGuess.toUpperCase();\n          setCurrentGuess('');\n          setGuesses(newGuesses);\n          currentIndex++;\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"input\",\n        children: \"Guess:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        value: currentGuess,\n        onChange: e => {\n          const guess = e.target.value;\n          if (guess.length < 6 && guess.match(/^[a-zA-Z]*$/)) setCurrentGuess(e.target.value);\n        },\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            if (currentGuess.length === 5) {\n              if (currentGuess === wordToGuess) {\n                setIsGameOver(true);\n                setIsGuessed(true);\n              } else if (currentIndex === 5) setIsGameOver(true);\n              let newGuesses = [...guesses];\n              newGuesses[currentIndex] = currentGuess.toUpperCase();\n              setCurrentGuess('');\n              setGuesses(newGuesses);\n              currentIndex++;\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isGameOver,\n      onRequestClose: resetGame,\n      contentLabel: \"Game Over Modal\",\n      style: {\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isGuessed ? 'Congratulations!' : 'Game Over'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isGuessed ? 'You guessed the word!' : 'Better luck next time!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YWY6ipVfASJm7o24oVoW04PuWXw=\");\n_c = App;\nfunction Line({\n  guess\n}) {\n  let char = '';\n  let boxes = [];\n  let className = 'tile';\n  for (let i = 0; i < WORD_SIZE; i++) {\n    console.log(guess, '---', wordToGuess);\n    if (guess && wordToGuess[i] === guess[i]) className += ' correct';else if (guess && wordToGuess.includes(guess[i])) className += ' close';else if (guess) className += ' incorrect';\n    char = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: guess[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n    className = 'tile';\n    boxes.push(char);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line\",\n    children: boxes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Line;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Line\");","map":{"version":3,"names":["useState","words","jsxDEV","_jsxDEV","WORD_SIZE","currentIndex","randomIndex","Math","floor","random","length","wordToGuess","toUpperCase","console","log","App","_s","guesses","setGuesses","Array","fill","currentGuess","setCurrentGuess","isGuessed","setIsGuessed","isGameOver","setIsGameOver","resetGame","set","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","guess","Line","onSubmit","e","preventDefault","newGuesses","for","type","value","onChange","target","match","onKeyDown","key","Modal","isOpen","onRequestClose","contentLabel","style","content","top","left","right","bottom","marginRight","transform","onClick","_c","char","boxes","i","includes","push","_c2","$RefreshReg$"],"sources":["/home/lsemlali/OpenDevEd-Wordle/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport words from \"./words.json\"\nimport './App.css';\n\nconst WORD_SIZE = 5;\nlet currentIndex = 0;\nconst randomIndex = Math.floor(Math.random() * words.length);\nlet wordToGuess = words[randomIndex].toUpperCase();\nconsole.log(wordToGuess)\nfunction App() {\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [currentGuess, setCurrentGuess] = useState('')\n  const [isGuessed, setIsGuessed] = useState(false)\n  const [isGameOver, setIsGameOver] = useState(false)\n\n  const resetGame = () => {\n    currentIndex = 0;\n    setIsGameOver(false);\n    setIsGuessed(false);\n    set('');\n    wordToGuess = words[randomIndex].toUpperCase();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className='title'>Wordle</h1>\n      {\n        guesses.map(guess => {\n          return <Line guess={guess ?? ''}/>\n        })\n      }\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        if (currentGuess.length === 5) {\n          let newGuesses = [...guesses];\n          newGuesses[currentIndex] = currentGuess.toUpperCase();\n          setCurrentGuess('');\n          setGuesses(newGuesses)\n          currentIndex++;\n        }\n      }}>\n\n        <label for=\"input\">Guess:</label>\n        <input \n          className='input'\n          type='text'value={currentGuess} \n          onChange={(e) => {\n            const guess = e.target.value;\n            if (guess.length < 6 && guess.match(/^[a-zA-Z]*$/))\n              setCurrentGuess(e.target.value);\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              if (currentGuess.length === 5) {\n                if (currentGuess === wordToGuess) {\n                  setIsGameOver(true);\n                  setIsGuessed(true);\n                }\n                else if (currentIndex === 5)\n                  setIsGameOver(true);\n                let newGuesses = [...guesses];\n                newGuesses[currentIndex] = currentGuess.toUpperCase();\n                setCurrentGuess('');\n                setGuesses(newGuesses)\n                currentIndex++;\n              }\n            }\n          }} \n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <Modal\n        isOpen={isGameOver}\n        onRequestClose={resetGame}\n        contentLabel=\"Game Over Modal\"\n        style={{\n          content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n          },\n        }}\n      >\n        <h2>{isGuessed ? 'Congratulations!' : 'Game Over'}</h2>\n        <p>{isGuessed ? 'You guessed the word!' : 'Better luck next time!'}</p>\n        <button onClick={resetGame}>Play Again</button>\n      </Modal>\n    </div>\n  );\n}\n\nfunction Line({ guess }) {\n  let char = ''\n  let boxes = []\n  let className = 'tile';\n  for (let i = 0; i < WORD_SIZE; i++) {\n    console.log(guess, '---', wordToGuess)\n    if (guess && wordToGuess[i] === guess[i])\n      className += ' correct';\n    else if (guess && wordToGuess.includes(guess[i]))\n      className += ' close';\n    else if (guess)\n      className += ' incorrect';\n    char = <div className={className}>{guess[i]}</div>;\n    className = 'tile';\n    boxes.push(char);\n  }\n\n  return <div className='line'>{boxes}</div>\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}