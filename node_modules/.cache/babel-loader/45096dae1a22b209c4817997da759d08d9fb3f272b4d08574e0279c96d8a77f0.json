{"ast":null,"code":"var _jsxFileName = \"/home/merouane/Desktop/wordle/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = '/words.json';\nconst WORD_LENGHT = 5;\nfunction App() {\n  _s();\n  const [solution, setSolution] = useState('');\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [currentGuess, setcurrentGuess] = useState('');\n  useEffect(() => {\n    const handleType = event => {\n      setcurrentGuess(currentGuess + event.key);\n    };\n    window.addEventListener('keydown', handleType);\n    return () => window.addEventListener('keydown', handleType);\n  });\n  useEffect(() => {\n    const fetchWords = async () => {\n      const response = await fetch(API_URL);\n      const words = await response.json();\n      const randomword = words[Math.floor(Math.random() * words.length)];\n      setSolution(randomword);\n      console.log(words);\n    };\n    fetchWords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: guesses.map(guess => {\n      return /*#__PURE__*/_jsxDEV(Line, {\n        guess: guess !== null && guess !== void 0 ? guess : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nGyaIGD5+bvsdJSyby03ZaXNzPc=\");\n_c = App;\nexport default App;\nfunction Line({\n  guess\n}) {\n  const tiles = [];\n  for (let i = 0; i < WORD_LENGHT; i++) {\n    const char = guess[i];\n    tiles.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile\",\n      children: char\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line\",\n    children: tiles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Line;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Line\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","API_URL","WORD_LENGHT","App","_s","solution","setSolution","guesses","setGuesses","Array","fill","currentGuess","setcurrentGuess","handleType","event","key","window","addEventListener","fetchWords","response","fetch","words","json","randomword","Math","floor","random","length","console","log","className","children","map","guess","Line","fileName","_jsxFileName","lineNumber","columnNumber","_c","tiles","i","char","push","_c2","$RefreshReg$"],"sources":["/home/merouane/Desktop/wordle/src/App.js"],"sourcesContent":["import './App.css'\nimport { useEffect, useState } from 'react'\n\nconst API_URL = '/words.json';\nconst WORD_LENGHT = 5;\n\nfunction App() {\n  const [solution, setSolution] = useState('');\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [currentGuess, setcurrentGuess] = useState('')\n\n  useEffect(() => {\n    const handleType = (event) => {\n      setcurrentGuess(currentGuess + event.key);\n    };\n\n    window.addEventListener('keydown', handleType);\n\n    return () => window.addEventListener('keydown', handleType);\n  });\n  \n  useEffect(() => {\n    const fetchWords = async () => {\n      const response = await fetch(API_URL);\n      const words = await response.json();\n      const randomword = words[Math.floor(Math.random() * words.length)];\n      setSolution(randomword);\n      console.log(words);\n    };\n    \n    fetchWords();\n  }, []);\n  \n  return (\n    <div className=\"board\">\n      {\n        guesses.map(guess => {\n          return (\n            <Line guess={guess ?? ''} />\n          );\n        })}\n        \n    </div>\n  );\n}\n\nexport default App;\n\n\nfunction Line({guess}) {\n  const tiles = [];\n  \n  for (let i = 0; i < WORD_LENGHT; i++) {\n    const char = guess[i];\n    tiles.push(<div key={i} className='tile'>{char}</div>)\n  }\n  return <div className='line'>{tiles}</div>\n}\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAG,aAAa;AAC7B,MAAMC,WAAW,GAAG,CAAC;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACW,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAIC,KAAK,IAAK;MAC5BF,eAAe,CAACD,YAAY,GAAGG,KAAK,CAACC,GAAG,CAAC;IAC3C,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,UAAU,CAAC;IAE9C,OAAO,MAAMG,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,UAAU,CAAC;EAC7D,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACd,MAAMqB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACnB,OAAO,CAAC;MACrC,MAAMoB,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACnC,MAAMC,UAAU,GAAGF,KAAK,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,KAAK,CAACM,MAAM,CAAC,CAAC;MAClErB,WAAW,CAACiB,UAAU,CAAC;MACvBK,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;IACpB,CAAC;IAEDH,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAK8B,SAAS,EAAC,OAAO;IAAAC,QAAA,EAElBxB,OAAO,CAACyB,GAAG,CAACC,KAAK,IAAI;MACnB,oBACEjC,OAAA,CAACkC,IAAI;QAACD,KAAK,EAAEA,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAEhC,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV;AAAClC,EAAA,CAtCQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAwCZ,eAAeA,GAAG;AAGlB,SAAS+B,IAAIA,CAAC;EAACD;AAAK,CAAC,EAAE;EACrB,MAAMO,KAAK,GAAG,EAAE;EAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvC,WAAW,EAAEuC,CAAC,EAAE,EAAE;IACpC,MAAMC,IAAI,GAAGT,KAAK,CAACQ,CAAC,CAAC;IACrBD,KAAK,CAACG,IAAI,eAAC3C,OAAA;MAAa8B,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEW;IAAI,GAAzBD,CAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8B,CAAC,CAAC;EACxD;EACA,oBAAOtC,OAAA;IAAK8B,SAAS,EAAC,MAAM;IAAAC,QAAA,EAAES;EAAK;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC5C;AAACM,GAAA,GARQV,IAAI;AAAA,IAAAK,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}