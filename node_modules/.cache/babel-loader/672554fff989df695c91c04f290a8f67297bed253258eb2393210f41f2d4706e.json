{"ast":null,"code":"var _jsxFileName = \"/home/merouane/Desktop/wordle/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = '/words.json';\nfunction App() {\n  _s();\n  const [solution, setSolution] = useState('');\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchWords = async () => {\n      try {\n        const response = await fetch(API_URL);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const words = await response.json();\n        const randomWord = words[Math.floor(Math.random() * words.length)];\n        setSolution(randomWord);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false); // Set loading to false once data is fetched or if an error occurs\n      }\n    };\n    fetchWords();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this); // Show loading message while fetching\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: solution\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7fyboiUtv3FrBQptcLhJd+eS240=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","API_URL","App","_s","solution","setSolution","guesses","setGuesses","Array","fill","loading","setLoading","fetchWords","response","fetch","ok","Error","words","json","randomWord","Math","floor","random","length","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/merouane/Desktop/wordle/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\n\nconst API_URL = '/words.json';\n\nfunction App() {\n  const [solution, setSolution] = useState('');\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchWords = async () => {\n      try {\n        const response = await fetch(API_URL);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const words = await response.json();\n        const randomWord = words[Math.floor(Math.random() * words.length)];\n        setSolution(randomWord);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false); // Set loading to false once data is fetched or if an error occurs\n      }\n    };\n\n    fetchWords();\n  }, []);\n\n  if (loading) return <div>Loading...</div>; // Show loading message while fetching\n\n  return (\n    <div className=\"App\">\n      <h1>{solution}</h1>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAG,aAAa;AAE7B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACb,OAAO,CAAC;QACrC,IAAI,CAACY,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACnC,MAAMC,UAAU,GAAGF,KAAK,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,KAAK,CAACM,MAAM,CAAC,CAAC;QAClElB,WAAW,CAACc,UAAU,CAAC;MACzB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,SAAS;QACRb,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE,oBAAOV,OAAA;IAAA0B,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAC,CAAC;;EAE3C,oBACE9B,OAAA;IAAK+B,SAAS,EAAC,KAAK;IAAAL,QAAA,eAClB1B,OAAA;MAAA0B,QAAA,EAAKtB;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAAC3B,EAAA,CAhCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}