{"ast":null,"code":"var _jsxFileName = \"/home/merouane/Desktop/wordle/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nfunction Line({\n  guess,\n  isFinal,\n  solution\n}) {\n  const tiles = [];\n  for (let i = 0; i < WORD_LENGTH; i++) {\n    const char = guess[i];\n    let className = 'tile';\n    if (isFinal) {\n      if (char === solution[i]) {\n        className += ' correct';\n      } else if (solution.includes(char)) {\n        className += ' close';\n      } else {\n        className += ' incorrect';\n      }\n    }\n    tiles.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: char\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line\",\n    children: tiles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n}\n_c = Line;\nfunction Keyboard({\n  onKeyPress,\n  usedLetters\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard\",\n    children: KEYBOARD_ROWS.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-row\",\n      children: row.map(key => {\n        let className = 'key';\n        if (usedLetters[key]) {\n          className += ` ${usedLetters[key]}`;\n        }\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: className,\n          onClick: () => onKeyPress(key),\n          children: key === 'Backspace' ? '←' : key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this);\n      })\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Keyboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Line\");\n$RefreshReg$(_c2, \"Keyboard\");","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","Line","guess","isFinal","solution","tiles","i","WORD_LENGTH","char","className","includes","push","_c","Keyboard","onKeyPress","usedLetters","KEYBOARD_ROWS","map","row","key","onClick","_c2","$RefreshReg$"],"sources":["/home/merouane/Desktop/wordle/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\nfunction Line({ guess, isFinal, solution }) {\n  const tiles = [];\n  \n  for (let i = 0; i < WORD_LENGTH; i++) {\n    const char = guess[i];\n    let className = 'tile';\n\n    if (isFinal) {\n      if (char === solution[i]) {\n        className += ' correct';\n      } else if (solution.includes(char)) {\n        className += ' close';\n      } else {\n        className += ' incorrect';\n      }\n    }\n\n    tiles.push(\n      <div key={i} className={className}>\n        {char}\n      </div>\n    );\n  }\n  \n  return <div className='line'>{tiles}</div>;\n}\n\nfunction Keyboard({ onKeyPress, usedLetters }) {\n  return (\n    <div className=\"keyboard\">\n      {KEYBOARD_ROWS.map((row, i) => (\n        <div key={i} className=\"keyboard-row\">\n          {row.map((key) => {\n            let className = 'key';\n            if (usedLetters[key]) {\n              className += ` ${usedLetters[key]}`;\n            }\n            return (\n              <button \n                key={key} \n                className={className}\n                onClick={() => onKeyPress(key)}\n              >\n                {key === 'Backspace' ? '←' : key}\n              </button>\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}