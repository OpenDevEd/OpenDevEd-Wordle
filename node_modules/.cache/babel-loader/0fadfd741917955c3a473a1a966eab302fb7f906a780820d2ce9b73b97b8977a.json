{"ast":null,"code":"var _jsxFileName = \"/home/lsemlali/OpenDevEd-Wordle/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport words from \"./words.json\";\nimport './App.css';\nimport HowToPlay from './HowToPlay';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst WORD_SIZE = 5;\nlet currentIndex = 0;\nconst randomIndex = Math.floor(Math.random() * words.length);\nlet wordToGuess = words[randomIndex].toUpperCase();\nconsole.log(wordToGuess);\nfunction App() {\n  _s();\n  const [solution, setSolution] = useState();\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [isGuessed, setIsGuessed] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const resetGame = () => {\n    currentIndex = 0;\n    setIsGameOver(false);\n    setIsGuessed(false);\n    setGuesses(Array(6).fill(null));\n    wordToGuess = words[randomIndex].toUpperCase();\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentGuess.length === 5) {\n      let newGuesses = [...guesses];\n      newGuesses[currentIndex] = currentGuess.toUpperCase();\n      setCurrentGuess('');\n      setGuesses(newGuesses);\n      currentIndex++;\n    }\n  };\n  const handleChange = e => {\n    const guess = e.target.value;\n    if (guess.length < 6 && guess.match(/^[a-zA-Z]*$/)) setCurrentGuess(e.target.value.toUpperCase());\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      if (currentGuess.length === 5) {\n        console.log(currentGuess, '-+-+-', wordToGuess);\n        if (currentGuess === wordToGuess) {\n          setIsGameOver(true);\n          setIsGuessed(true);\n        } else if (currentIndex === 5) setIsGameOver(true);\n        let newGuesses = [...guesses];\n        newGuesses[currentIndex] = currentGuess.toUpperCase();\n        setCurrentGuess('');\n        setGuesses(newGuesses);\n        currentIndex++;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Wordle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), guesses.map(guess => {\n      return /*#__PURE__*/_jsxDEV(Line, {\n        guess: guess !== null && guess !== void 0 ? guess : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        value: currentGuess,\n        onChange: handleChange,\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"guess-button\",\n        children: \"\\uD83D\\uDC4D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isGameOver,\n      onRequestClose: resetGame,\n      contentLabel: \"Game Over Modal\",\n      className: \"modal-content\",\n      overlayClassName: \"modal-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isGuessed ? 'Congratulations!' : 'Game Over'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isGuessed ? 'You guessed the word!' : `Better luck next time! The word was \"${wordToGuess}\".`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"play-again-button\",\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HowToPlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/cesCgfoWAZ+PPGDGHDTdezB9ag=\");\n_c = App;\nfunction Line({\n  guess\n}) {\n  let char = '';\n  let boxes = [];\n  let className = 'tile';\n  for (let i = 0; i < WORD_SIZE; i++) {\n    console.log(guess, '---', wordToGuess);\n    if (guess && wordToGuess[i] === guess[i]) className += ' correct';else if (guess && wordToGuess.includes(guess[i])) className += ' close';else if (guess) className += ' incorrect';\n    char = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: guess[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n    className = 'tile';\n    boxes.push(char);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line\",\n    children: boxes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Line;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Line\");","map":{"version":3,"names":["useState","words","HowToPlay","Modal","jsxDEV","_jsxDEV","setAppElement","WORD_SIZE","currentIndex","randomIndex","Math","floor","random","length","wordToGuess","toUpperCase","console","log","App","_s","solution","setSolution","guesses","setGuesses","Array","fill","currentGuess","setCurrentGuess","isGuessed","setIsGuessed","isGameOver","setIsGameOver","resetGame","handleSubmit","e","preventDefault","newGuesses","handleChange","guess","target","value","match","handleKeyDown","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Line","onSubmit","type","onChange","onKeyDown","isOpen","onRequestClose","contentLabel","overlayClassName","onClick","_c","char","boxes","i","includes","push","_c2","$RefreshReg$"],"sources":["/home/lsemlali/OpenDevEd-Wordle/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport words from \"./words.json\"\nimport './App.css';\nimport HowToPlay from './HowToPlay';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\n\nconst WORD_SIZE = 5;\nlet currentIndex = 0;\nconst randomIndex = Math.floor(Math.random() * words.length);\nlet wordToGuess = words[randomIndex].toUpperCase();\nconsole.log(wordToGuess)\nfunction App() {\n  const [solution, setSolution] = useState()\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [currentGuess, setCurrentGuess] = useState('')\n  const [isGuessed, setIsGuessed] = useState(false)\n  const [isGameOver, setIsGameOver] = useState(false)\n\n  const resetGame = () => {\n    currentIndex = 0;\n    setIsGameOver(false);\n    setIsGuessed(false);\n    setGuesses(Array(6).fill(null));\n    wordToGuess = words[randomIndex].toUpperCase();\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (currentGuess.length === 5) {\n      let newGuesses = [...guesses];\n      newGuesses[currentIndex] = currentGuess.toUpperCase();\n      setCurrentGuess('');\n      setGuesses(newGuesses)\n      currentIndex++;\n    }\n  }\n\n  const handleChange = (e) => {\n    const guess = e.target.value;\n    if (guess.length < 6 && guess.match(/^[a-zA-Z]*$/))\n      setCurrentGuess(e.target.value.toUpperCase());\n  }\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      if (currentGuess.length === 5) {\n        console.log(currentGuess, '-+-+-', wordToGuess)\n        if (currentGuess === wordToGuess) {\n          setIsGameOver(true);\n          setIsGuessed(true);\n        }\n        else if (currentIndex === 5)\n          setIsGameOver(true);\n        let newGuesses = [...guesses];\n        newGuesses[currentIndex] = currentGuess.toUpperCase();\n        setCurrentGuess('');\n        setGuesses(newGuesses)\n        currentIndex++;\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='title'>Wordle</h1>\n      {\n        guesses.map(guess => {\n          return <Line guess={guess ?? ''}/>\n        })\n      }\n      <form onSubmit={handleSubmit}>\n        <input \n          className='input'\n          type='text'value={currentGuess} \n          onChange={handleChange}\n          onKeyDown={handleKeyDown} \n        />\n        <button type=\"submit\" className='guess-button'>üëç</button>\n      </form>\n      <Modal\n        isOpen={isGameOver}\n        onRequestClose={resetGame}\n        contentLabel=\"Game Over Modal\"\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n      >\n        <h2>{isGuessed ? 'Congratulations!' : 'Game Over'}</h2>\n        <p>{isGuessed ? 'You guessed the word!' : `Better luck next time! The word was \"${wordToGuess}\".`}</p>\n        <button onClick={resetGame} className='play-again-button'>Play Again</button>\n      </Modal>\n      <HowToPlay />\n    </div>\n  );\n}\n\nfunction Line({ guess }) {\n  let char = ''\n  let boxes = []\n  let className = 'tile';\n  for (let i = 0; i < WORD_SIZE; i++) {\n    console.log(guess, '---', wordToGuess)\n    if (guess && wordToGuess[i] === guess[i])\n      className += ' correct';\n    else if (guess && wordToGuess.includes(guess[i]))\n      className += ' close';\n    else if (guess)\n      className += ' incorrect';\n    char = <div className={className}>{guess[i]}</div>;\n    className = 'tile';\n    boxes.push(char);\n  }\n\n  return <div className='line'>{boxes}</div>\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}