{"ast":null,"code":"const WORDS = ['APPLE', 'BANANA', 'CHERRY', 'GRAPE', 'LEMON']; // Add more words or fetch from an API\n\nexport const generateRandomWord = () => {\n  return WORDS[Math.floor(Math.random() * WORDS.length)];\n};\nexport const checkGuess = (guess, targetWord) => {\n  let result = {\n    correct: false,\n    feedback: ''\n  };\n  if (guess === targetWord) {\n    result.correct = true;\n    return result;\n  }\n  let feedback = '';\n  for (let i = 0; i < guess.length; i++) {\n    if (guess[i] === targetWord[i]) {\n      feedback += guess[i]; // Correct letter in the correct position\n    } else if (targetWord.includes(guess[i])) {\n      feedback += `(${guess[i]})`; // Correct letter in the wrong position\n    } else {\n      feedback += '_'; // Incorrect letter\n    }\n  }\n  result.feedback = feedback;\n  return result;\n};","map":{"version":3,"names":["WORDS","generateRandomWord","Math","floor","random","length","checkGuess","guess","targetWord","result","correct","feedback","i","includes"],"sources":["/home/merouane/Desktop/wordle/src/utils/wordUtils.js"],"sourcesContent":["const WORDS = ['APPLE', 'BANANA', 'CHERRY', 'GRAPE', 'LEMON']; // Add more words or fetch from an API\n\nexport const generateRandomWord = () => {\n  return WORDS[Math.floor(Math.random() * WORDS.length)];\n};\n\nexport const checkGuess = (guess, targetWord) => {\n  let result = { correct: false, feedback: '' };\n\n  if (guess === targetWord) {\n    result.correct = true;\n    return result;\n  }\n\n  let feedback = '';\n  for (let i = 0; i < guess.length; i++) {\n    if (guess[i] === targetWord[i]) {\n      feedback += guess[i]; // Correct letter in the correct position\n    } else if (targetWord.includes(guess[i])) {\n      feedback += `(${guess[i]})`; // Correct letter in the wrong position\n    } else {\n      feedback += '_'; // Incorrect letter\n    }\n  }\n\n  result.feedback = feedback;\n  return result;\n};"],"mappings":"AAAA,MAAMA,KAAK,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;;AAE/D,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EACtC,OAAOD,KAAK,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,KAAK,CAACK,MAAM,CAAC,CAAC;AACxD,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;EAC/C,IAAIC,MAAM,GAAG;IAAEC,OAAO,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAG,CAAC;EAE7C,IAAIJ,KAAK,KAAKC,UAAU,EAAE;IACxBC,MAAM,CAACC,OAAO,GAAG,IAAI;IACrB,OAAOD,MAAM;EACf;EAEA,IAAIE,QAAQ,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACF,MAAM,EAAEO,CAAC,EAAE,EAAE;IACrC,IAAIL,KAAK,CAACK,CAAC,CAAC,KAAKJ,UAAU,CAACI,CAAC,CAAC,EAAE;MAC9BD,QAAQ,IAAIJ,KAAK,CAACK,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,MAAM,IAAIJ,UAAU,CAACK,QAAQ,CAACN,KAAK,CAACK,CAAC,CAAC,CAAC,EAAE;MACxCD,QAAQ,IAAI,IAAIJ,KAAK,CAACK,CAAC,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC,MAAM;MACLD,QAAQ,IAAI,GAAG,CAAC,CAAC;IACnB;EACF;EAEAF,MAAM,CAACE,QAAQ,GAAGA,QAAQ;EAC1B,OAAOF,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}