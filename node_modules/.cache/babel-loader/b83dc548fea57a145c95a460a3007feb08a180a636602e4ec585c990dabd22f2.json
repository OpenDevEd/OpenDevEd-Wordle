{"ast":null,"code":"var _jsxFileName = \"/home/lsemlali/OpenDevEd-Wordle/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport words from \"./words.json\";\nimport './App.css';\nimport HowToPlay from './HowToPlay';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst WORD_SIZE = 5;\nfunction App() {\n  _s();\n  let randomIndex = Math.floor(Math.random() * words.length);\n  const randomWord = words[randomIndex].toUpperCase();\n  const [solution, setSolution] = useState(randomWord);\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isGuessed, setIsGuessed] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const resetGame = () => {\n    setCurrentIndex(0);\n    setIsGameOver(false);\n    setIsGuessed(false);\n    setGuesses(Array(6).fill(null));\n    randomIndex = Math.floor(Math.random() * words.length);\n    setSolution(words[randomIndex].toUpperCase());\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentGuess.length === 5) {\n      let newGuesses = [...guesses];\n      newGuesses[currentIndex] = currentGuess.toUpperCase();\n      setCurrentGuess('');\n      setGuesses(newGuesses);\n      setCurrentIndex(old => old + 1);\n    }\n  };\n  const handleChange = e => {\n    const guess = e.target.value;\n    if (guess.length < 6 && guess.match(/^[a-zA-Z]*$/)) setCurrentGuess(e.target.value.toUpperCase());\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      if (currentGuess.length === 5) {\n        console.log(currentGuess, '-+-+-', solution);\n        if (currentGuess === solution) {\n          setIsGameOver(true);\n          setIsGuessed(true);\n        } else if (currentIndex === 5) setIsGameOver(true);\n        let newGuesses = [...guesses];\n        newGuesses[currentIndex] = currentGuess.toUpperCase();\n        setCurrentGuess('');\n        setGuesses(newGuesses);\n        setCurrentIndex(old => old + 1);\n      }\n    }\n  };\n  const Line = ({\n    guess\n  }) => {\n    let char = '';\n    let boxes = [];\n    let className = 'tile';\n    for (let i = 0; i < WORD_SIZE; i++) {\n      console.log(guess, '---', solution);\n      if (guess && solution[i] === guess[i]) className += ' correct';else if (guess && solution.includes(guess[i])) className += ' close';else if (guess) className += ' incorrect';\n      char = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: guess[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }, this);\n      className = 'tile';\n      boxes.push(char);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line\",\n      children: boxes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Wordle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), guesses.map(guess => {\n      return /*#__PURE__*/_jsxDEV(Line, {\n        guess: guess !== null && guess !== void 0 ? guess : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        value: currentGuess,\n        onChange: handleChange,\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"guess-button\",\n        children: \"\\uD83D\\uDC4D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isGameOver,\n      onRequestClose: resetGame,\n      contentLabel: \"Game Over Modal\",\n      className: \"modal-content\"\n      // overlayClassName=\"modal-overlay\"\n      // style={{\n      //   content: {\n      //     top: '50%',\n      //     left: '50%',\n      //     right: 'auto',\n      //     bottom: 'auto',\n      //     marginRight: '-50%',\n      //     transform: 'translate(-50%, -50%)',\n      //   },\n      // }}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isGuessed ? 'Congratulations!' : 'Game Over'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isGuessed ? 'You guessed the word!' : `Better luck next time! The word was \"${solution}\".`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"play-again-button\",\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HowToPlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CYeVJgCGzasydnHlrTW44ZQSAII=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","words","HowToPlay","Modal","jsxDEV","_jsxDEV","setAppElement","WORD_SIZE","App","_s","randomIndex","Math","floor","random","length","randomWord","toUpperCase","solution","setSolution","guesses","setGuesses","Array","fill","currentGuess","setCurrentGuess","currentIndex","setCurrentIndex","isGuessed","setIsGuessed","isGameOver","setIsGameOver","resetGame","handleSubmit","e","preventDefault","newGuesses","old","handleChange","guess","target","value","match","handleKeyDown","key","console","log","Line","char","boxes","className","i","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","push","map","onSubmit","type","onChange","onKeyDown","isOpen","onRequestClose","contentLabel","onClick","_c","$RefreshReg$"],"sources":["/home/lsemlali/OpenDevEd-Wordle/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport words from \"./words.json\"\nimport './App.css';\nimport HowToPlay from './HowToPlay';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\n\nconst WORD_SIZE = 5;\nfunction App() {\n  let randomIndex = Math.floor(Math.random() * words.length);\n  const randomWord = words[randomIndex].toUpperCase();\n  const [solution, setSolution] = useState(randomWord)\n  const [guesses, setGuesses] = useState(Array(6).fill(null));\n  const [currentGuess, setCurrentGuess] = useState('')\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const [isGuessed, setIsGuessed] = useState(false)\n  const [isGameOver, setIsGameOver] = useState(false)\n\n  const resetGame = () => {\n    setCurrentIndex(0);\n    setIsGameOver(false);\n    setIsGuessed(false);\n    setGuesses(Array(6).fill(null));\n    randomIndex = Math.floor(Math.random() * words.length);\n    setSolution(words[randomIndex].toUpperCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (currentGuess.length === 5) {\n      let newGuesses = [...guesses];\n      newGuesses[currentIndex] = currentGuess.toUpperCase();\n      setCurrentGuess('');\n      setGuesses(newGuesses)\n      setCurrentIndex((old) => old + 1);\n    }\n  }\n\n  const handleChange = (e) => {\n    const guess = e.target.value;\n    if (guess.length < 6 && guess.match(/^[a-zA-Z]*$/))\n      setCurrentGuess(e.target.value.toUpperCase());\n  }\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      if (currentGuess.length === 5) {\n        console.log(currentGuess, '-+-+-', solution)\n        if (currentGuess === solution) {\n          setIsGameOver(true);\n          setIsGuessed(true);\n        }\n        else if (currentIndex === 5)\n          setIsGameOver(true);\n        let newGuesses = [...guesses];\n        newGuesses[currentIndex] = currentGuess.toUpperCase();\n        setCurrentGuess('');\n        setGuesses(newGuesses)\n        setCurrentIndex((old) => old + 1);\n      }\n    }\n  }\n  \n  const Line = ({ guess }) => {\n    let char = ''\n    let boxes = []\n    let className = 'tile';\n    for (let i = 0; i < WORD_SIZE; i++) {\n      console.log(guess, '---', solution)\n      if (guess && solution[i] === guess[i])\n        className += ' correct';\n      else if (guess && solution.includes(guess[i]))\n        className += ' close';\n      else if (guess)\n        className += ' incorrect';\n      char = <div className={className}>{guess[i]}</div>;\n      className = 'tile';\n      boxes.push(char);\n    }\n  \n    return <div className='line'>{boxes}</div>\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='title'>Wordle</h1>\n      {\n        guesses.map(guess => {\n          return <Line guess={guess ?? ''}/>\n        })\n      }\n      <form onSubmit={handleSubmit}>\n        <input \n          className='input'\n          type='text'value={currentGuess} \n          onChange={handleChange}\n          onKeyDown={handleKeyDown} \n        />\n        <button type=\"submit\" className='guess-button'>👍</button>\n      </form>\n      <Modal\n        isOpen={isGameOver}\n        onRequestClose={resetGame}\n        contentLabel=\"Game Over Modal\"\n        className=\"modal-content\"\n        // overlayClassName=\"modal-overlay\"\n        // style={{\n        //   content: {\n        //     top: '50%',\n        //     left: '50%',\n        //     right: 'auto',\n        //     bottom: 'auto',\n        //     marginRight: '-50%',\n        //     transform: 'translate(-50%, -50%)',\n        //   },\n        // }}\n      >\n        <h2>{isGuessed ? 'Congratulations!' : 'Game Over'}</h2>\n        <p>{isGuessed ? 'You guessed the word!' : `Better luck next time! The word was \"${solution}\".`}</p>\n        <button onClick={resetGame} className='play-again-button'>Play Again</button>\n      </Modal>\n      <HowToPlay />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhCF,KAAK,CAACG,aAAa,CAAC,OAAO,CAAC;AAE5B,MAAMC,SAAS,GAAG,CAAC;AACnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,KAAK,CAACa,MAAM,CAAC;EAC1D,MAAMC,UAAU,GAAGd,KAAK,CAACS,WAAW,CAAC,CAACM,WAAW,CAAC,CAAC;EACnD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAACe,UAAU,CAAC;EACpD,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAACqB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM+B,SAAS,GAAGA,CAAA,KAAM;IACtBL,eAAe,CAAC,CAAC,CAAC;IAClBI,aAAa,CAAC,KAAK,CAAC;IACpBF,YAAY,CAAC,KAAK,CAAC;IACnBR,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/BZ,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,KAAK,CAACa,MAAM,CAAC;IACtDI,WAAW,CAACjB,KAAK,CAACS,WAAW,CAAC,CAACM,WAAW,CAAC,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMgB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIX,YAAY,CAACT,MAAM,KAAK,CAAC,EAAE;MAC7B,IAAIqB,UAAU,GAAG,CAAC,GAAGhB,OAAO,CAAC;MAC7BgB,UAAU,CAACV,YAAY,CAAC,GAAGF,YAAY,CAACP,WAAW,CAAC,CAAC;MACrDQ,eAAe,CAAC,EAAE,CAAC;MACnBJ,UAAU,CAACe,UAAU,CAAC;MACtBT,eAAe,CAAEU,GAAG,IAAKA,GAAG,GAAG,CAAC,CAAC;IACnC;EACF,CAAC;EAED,MAAMC,YAAY,GAAIJ,CAAC,IAAK;IAC1B,MAAMK,KAAK,GAAGL,CAAC,CAACM,MAAM,CAACC,KAAK;IAC5B,IAAIF,KAAK,CAACxB,MAAM,GAAG,CAAC,IAAIwB,KAAK,CAACG,KAAK,CAAC,aAAa,CAAC,EAChDjB,eAAe,CAACS,CAAC,CAACM,MAAM,CAACC,KAAK,CAACxB,WAAW,CAAC,CAAC,CAAC;EACjD,CAAC;EAED,MAAM0B,aAAa,GAAIT,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACU,GAAG,KAAK,OAAO,EAAE;MACrB,IAAIpB,YAAY,CAACT,MAAM,KAAK,CAAC,EAAE;QAC7B8B,OAAO,CAACC,GAAG,CAACtB,YAAY,EAAE,OAAO,EAAEN,QAAQ,CAAC;QAC5C,IAAIM,YAAY,KAAKN,QAAQ,EAAE;UAC7Ba,aAAa,CAAC,IAAI,CAAC;UACnBF,YAAY,CAAC,IAAI,CAAC;QACpB,CAAC,MACI,IAAIH,YAAY,KAAK,CAAC,EACzBK,aAAa,CAAC,IAAI,CAAC;QACrB,IAAIK,UAAU,GAAG,CAAC,GAAGhB,OAAO,CAAC;QAC7BgB,UAAU,CAACV,YAAY,CAAC,GAAGF,YAAY,CAACP,WAAW,CAAC,CAAC;QACrDQ,eAAe,CAAC,EAAE,CAAC;QACnBJ,UAAU,CAACe,UAAU,CAAC;QACtBT,eAAe,CAAEU,GAAG,IAAKA,GAAG,GAAG,CAAC,CAAC;MACnC;IACF;EACF,CAAC;EAED,MAAMU,IAAI,GAAGA,CAAC;IAAER;EAAM,CAAC,KAAK;IAC1B,IAAIS,IAAI,GAAG,EAAE;IACb,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIC,SAAS,GAAG,MAAM;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3C,SAAS,EAAE2C,CAAC,EAAE,EAAE;MAClCN,OAAO,CAACC,GAAG,CAACP,KAAK,EAAE,KAAK,EAAErB,QAAQ,CAAC;MACnC,IAAIqB,KAAK,IAAIrB,QAAQ,CAACiC,CAAC,CAAC,KAAKZ,KAAK,CAACY,CAAC,CAAC,EACnCD,SAAS,IAAI,UAAU,CAAC,KACrB,IAAIX,KAAK,IAAIrB,QAAQ,CAACkC,QAAQ,CAACb,KAAK,CAACY,CAAC,CAAC,CAAC,EAC3CD,SAAS,IAAI,QAAQ,CAAC,KACnB,IAAIX,KAAK,EACZW,SAAS,IAAI,YAAY;MAC3BF,IAAI,gBAAG1C,OAAA;QAAK4C,SAAS,EAAEA,SAAU;QAAAG,QAAA,EAAEd,KAAK,CAACY,CAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;MAClDP,SAAS,GAAG,MAAM;MAClBD,KAAK,CAACS,IAAI,CAACV,IAAI,CAAC;IAClB;IAEA,oBAAO1C,OAAA;MAAK4C,SAAS,EAAC,MAAM;MAAAG,QAAA,EAAEJ;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC5C,CAAC;EAED,oBACEnD,OAAA;IAAK4C,SAAS,EAAC,KAAK;IAAAG,QAAA,gBAClB/C,OAAA;MAAI4C,SAAS,EAAC,OAAO;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE/BrC,OAAO,CAACuC,GAAG,CAACpB,KAAK,IAAI;MACnB,oBAAOjC,OAAA,CAACyC,IAAI;QAACR,KAAK,EAAEA,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI;MAAG;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IACpC,CAAC,CAAC,eAEJnD,OAAA;MAAMsD,QAAQ,EAAE3B,YAAa;MAAAoB,QAAA,gBAC3B/C,OAAA;QACE4C,SAAS,EAAC,OAAO;QACjBW,IAAI,EAAC,MAAM;QAAApB,KAAK,EAAEjB,YAAa;QAC/BsC,QAAQ,EAAExB,YAAa;QACvByB,SAAS,EAAEpB;MAAc;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFnD,OAAA;QAAQuD,IAAI,EAAC,QAAQ;QAACX,SAAS,EAAC,cAAc;QAAAG,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACPnD,OAAA,CAACF,KAAK;MACJ4D,MAAM,EAAElC,UAAW;MACnBmC,cAAc,EAAEjC,SAAU;MAC1BkC,YAAY,EAAC,iBAAiB;MAC9BhB,SAAS,EAAC;MACV;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAAA;MAAAG,QAAA,gBAEA/C,OAAA;QAAA+C,QAAA,EAAKzB,SAAS,GAAG,kBAAkB,GAAG;MAAW;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvDnD,OAAA;QAAA+C,QAAA,EAAIzB,SAAS,GAAG,uBAAuB,GAAG,wCAAwCV,QAAQ;MAAI;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnGnD,OAAA;QAAQ6D,OAAO,EAAEnC,SAAU;QAACkB,SAAS,EAAC,mBAAmB;QAAAG,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC,eACRnD,OAAA,CAACH,SAAS;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAAC/C,EAAA,CApHQD,GAAG;AAAA2D,EAAA,GAAH3D,GAAG;AAsHZ,eAAeA,GAAG;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}